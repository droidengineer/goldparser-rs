"Name"     = 'Enter the name of the grammar'
"Author"   = 'Enter your name'
"Version"  = 'The version of the grammar and/or language'
"About"    = 'A short description of the grammar'

"Start Symbol" = <Start>

! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{WS}           = {Whitespace} - {CR} - {LF}
{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]
{String Chars} = {Printable} + {HT} - ["]

! -------------------------------------------------
! Terminals
! -------------------------------------------------

! The following defines the Whitespace terminal using the {WS}
! set - which excludes the carriage return and line feed 
! characters

Whitespace    = {WS}+
NewLine       = {CR}{LF} | {CR} | {LF}

Identifier    = {Alphanumeric} | {ID Head}{ID Tail}*
StringLiteral = '"' {String Chars}* '"'

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The following rule defines a series of newline tokens.
! Use this rule rather than the newline terminal.

<nl> ::= NewLine <nl>  !One or more
 |  NewLine

<nl Opt> ::= NewLine <nl Opt> !Zero or more
 |  !Empty

! <nl opt> removes blank lines before first statement

<Start>   ::= <nl opt> <Program>

<Program> ::= 

<Expression>  ::= <Expression> '>'  <Add Exp> 
               |  <Expression> '<'  <Add Exp> 
               |  <Expression> '<=' <Add Exp> 
               |  <Expression> '>=' <Add Exp>
               |  <Expression> '==' <Add Exp>    !Equal
               |  <Expression> '<>' <Add Exp>    !Not equal
               |  <Add Exp> 

<Add Exp>     ::= <Add Exp> '+' <Mult Exp>
               |  <Add Exp> '-' <Mult Exp>
               |  <Mult Exp> 

<Mult Exp>    ::= <Mult Exp> '*' <Negate Exp> 
               |  <Mult Exp> '/' <Negate Exp> 
               |  <Negate Exp> 

<Negate Exp>  ::= '-' <Value> 
               |  <Value> 

!Add more values to the rule below - as needed

<Value>       ::= Identifier
               |  '(' <Expression> ')'
